{
  "general": {
    "dumpCraftingConfig": {
      "value": false,
      "comment": "If true, then all recipes for all items in packs will be dumped into the config file at boot.  WARNING: this will overwrite your existing crafting overrides file!"
    },
    "opSignEditingOnly": {
      "value": false,
      "comment": "If true, only OPs will be able to edit signs on servers.  Does not affect client worlds."
    },
    "opPickupVehiclesOnly": {
      "value": false,
      "comment": "If true, only OPs will be able to pick up vehicles with wrenches.  Does not affect client worlds."
    },
    "creativePickupVehiclesOnly": {
      "value": false,
      "comment": "If true, vehicles can only be picked up in creative mode."
    },
    "blockBreakage": {
      "value": true,
      "comment": "Whether or not vehicles and guns can break blocks when they hit them.  If false, vehicles will simply stop when they hit blocks, and guns won\u0027t break blocks when they hit them.  This will also disable explosive block breakage, though not explosions themselves."
    },
    "vehicleDestruction": {
      "value": true,
      "comment": "Whether or not vehicles can be destroyed by ramming into blocks at high speeds.  Set this to false if you don\u0027t like loosing vehicles to badly-placed walls."
    },
    "noclipVehicles": {
      "value": false,
      "comment": "If true, vehicles will not be able to collide with blocks.  This also prevents them from moving if they do not have wheels on them, as otherwise they would phase through the ground into the void."
    },
    "creativeDamage": {
      "value": false,
      "comment": "If true, damage from vehicles and guns will be applied to creative players."
    },
    "chunkloadVehicles": {
      "value": true,
      "comment": "If true, vehicles will be chunkloaded when on roads/tracks.  This allows them to travel into unloaded chunks."
    },
    "doLegacyLightCompats": {
      "value": true,
      "comment": "If true, legacy compatibility code will be performed on all models to make their lights work with newer versions.  This code will significantly slow down boot times due to needing to parse all models on boot, however, packs may not have functional lights without it.  Choose wisely if you want speed or features."
    },
    "useHSV": {
      "value": false,
      "comment": "If enabled, the MTS dev mode will export color values as HSV instead of hex."
    },
    "speedFactor": {
      "value": 0.35,
      "comment": "Factor to apply to vehicle movement.  1 is the realistic value, but this makes vehicles move too fast for Minecraft. Adjust with caution."
    },
    "fuelUsageFactor": {
      "value": 1.0,
      "comment": "Factor times which engines use fuel.  Change this if you think engines use fuel too fast or slow."
    },
    "engineHoursFactor": {
      "value": 1.0,
      "comment": "Factor times which engines hours accumulate.  Change this if you want to adjust how fast engines wear out."
    },
    "climbSpeed": {
      "value": 0.125,
      "comment": "How far a vehicle will \u0027climb\u0027 blocks every tick when the wheels go into the ground.  Higher values make vehicles climb blocks quicker at the cost of smooth movement."
    },
    "gravityFactor": {
      "value": 1.0,
      "comment": "Factor for gravitational forces applied to vehicles.  Can be adjusted if you think cars are too \u0027floaty\u0027.  Does not affect aircraft."
    },
    "engineSpeedTempFactor": {
      "value": 1.0,
      "comment": "Factor for how RPM affects engine temp.  Higher values will make engines heat up quicker at higher RPMs."
    },
    "engineBiomeTempFactor": {
      "value": 1.0,
      "comment": "Factor for how biome temp affects engine temp.  Higher values will make engines heat up quicker in hotter biomes."
    },
    "joinedPlayers": {
      "value": [],
      "comment": "Listing of players that have joined this world.  Players will be given the manual on their first join."
    },
    "itemWeights": {
      "comment1": "The following section is used for calculating item weights.  Any item that contains the text bits will have its weight multiplied by the following factor.",
      "comment2": "This mass factors into vehicle performance, with particular emphasis on vehicle payloads.  Some defaults are presented here, but you can add/remove to your liking.",
      "comment3": "Note that the part of the name searched is the item\u0027s registry name, NOT the in-game display name.  This is similar to what is in the /give command.",
      "weights": {
        "gold": 4.0,
        "diamond": 4.0,
        "ore": 2.5,
        "iron": 4.0,
        "coal": 2.0,
        "stone": 1.5
      }
    }
  },
  "damage": {
    "explosions": {
      "value": true,
      "comment": "Whether or not vehicles explode when crashed or shot down."
    },
    "wheelBreakage": {
      "value": true,
      "comment": "Whether or not wheels can be broken (go flat)."
    },
    "wheelDamageIgnoreVelocity": {
      "value": false,
      "comment": "Whether or not velocity is ignored when calculating wheel damage."
    },
    "propellerDamageFactor": {
      "value": 1.0,
      "comment": "Factor for damage caused by a propeller."
    },
    "jetDamageFactor": {
      "value": 1.0,
      "comment": "Factor for damage caused by a jet engine."
    },
    "wheelDamageFactor": {
      "value": 1.0,
      "comment": "Factor for damage caused by wheels on vehicles."
    },
    "crashDamageFactor": {
      "value": 1.0,
      "comment": "Factor for damage caused by crashes."
    },
    "bulletDamageFactor": {
      "value": 1.0,
      "comment": "Factor for damage caused by bullets on vehicles."
    },
    "engineLeakProbability": {
      "value": 0.01,
      "comment": "Chance an engine will spring a leak if hit.  Explosions cause 10x this chance."
    },
    "crashItemDropPercentage": {
      "value": 0.75,
      "comment": "Percent that a crafting ingredient will be dropped when a vehicle is crashed.  Note that fire/explosions may destroy these items if enabled, so just because they drop does not mean you will get all of them."
    },
    "wheelDamageMinimumVelocity": {
      "value": 0.2,
      "comment": "Minimum velocity (blocks/second) which vehicles must be going to damage entities with their wheels."
    }
  },
  "fuel": {
    "comment1": "The following section is used for fuel configs for engines.  Each entry here is a single fuel type for engines.",
    "comment2": "Inside each entry exist values for the potency of the fluids that can be considered to be that fuel type.",
    "comment3": "You can make engines take different types of fluids for their fuels by editing these values.  See the in-game handbook for more information.",
    "comment4": "If you are having troubles getting the name for a particular fluid, run the game with the mods you want and check the \u0027lastLoadedFluids\u0027 list.  This contains all the fluids that were present during the last run of the game.",
    "fuels": {
      "diesel": {
        "creosote": 0.7,
        "diesel": 1.0,
        "lava": 1.0,
        "oil": 0.5,
        "biodiesel": 0.8
      },
      "Gasoline": {
        "lava": 1.0,
        "gasoline": 1.0,
        "ethanol": 0.85
      },
      "electric": {
        "lava": 1.0
      },
      "avgas": {
        "lava": 1.0,
        "gasoline": 1.0
      },
      "gasoline": {
        "lava": 1.0,
        "gasoline": 1.0,
        "ethanol": 0.85
      },
      "hydrogen": {
        "lava": 1.0
      },
      "water": {
        "lava": 1.0
      }
    },
    "lastLoadedFluids": {
      "seed_oil": "Seed Oil",
      "oil_residue": "Residue (§bCool§r)",
      "dark_steel": "Molten Dark Steel",
      "construction_alloy": "Molten Iron Alloy",
      "binnie.brandy.elderberry": "Elderberry Brandy",
      "binnie.juice.plum": "Plum Juice",
      "manyullyn": "Molten Manyullyn",
      "binnie.cider.apple": "Cider",
      "purpleslime": "Liquid Purple Slime",
      "protein": "Protein",
      "fuel_dense": "Dense Fuel (§bCool§r)",
      "binnie.juice.olive": "Olive Oil",
      "lifeessence": "Life Essence",
      "invar": "Molten Invar",
      "binnie.juice.carrot": "Carrot Juice",
      "yellorium": "Fluid Yellorium",
      "oil_heavy_heat_1": "Heavy Oil (§6Hot§r)",
      "ic2milk": "Milk",
      "fiery_essence": "Fiery Essence",
      "napalm": "Napalm",
      "ic2creosote": "Creosote",
      "binnie.juice.apricot": "Apricot Juice",
      "binnie.juice.red.grape": "Red Grape Juice",
      "milk": "Milk",
      "binnie.bacteria.vector": "Bacteria Vector",
      "liquid_crystal": "Resonating Crystal Liquid",
      "crude_oil": "Crude Oil",
      "oil_distilled": "Distilled Oil (§bCool§r)",
      "oil_heavy_heat_2": "Heavy Oil (§cSearing§r)",
      "binnie.juice.cherry": "Cherry Juice",
      "binnie.liqueur.raspberry": "Raspberry Liqueur",
      "bronze": "Molten Bronze",
      "binnie.juice.grapefruit": "Grapefruit Juice",
      "binnie.tequila": "Tequila",
      "ic2distilled_water": "Distilled Water",
      "binnie.liquor.apple": "Apple Liquor",
      "binnie.whiskey": "Whiskey",
      "oil_heavy": "Heavy Oil (§bCool§r)",
      "binnie.wine.red": "Red Wine",
      "seed.oil": "Seed Oil",
      "liquid_death": "Liquid Death",
      "redstone": "Destabilized Redstone",
      "wine": "Wine",
      "aerotheum": "Zephyrean Aerotheum",
      "binnie.brandy.plum": "Plum Brandy",
      "ic2hydrogen": "Hydrogen",
      "essence": "Essence",
      "binnie.liqueur.peach": "Peach Liqueur",
      "aluminum": "Molten Aluminum",
      "fuelcolumn": "fluid.fuelcolumn",
      "binnie.juice.lime": "Lime Juice",
      "liquid_sunshine": "Liquid Sunshine",
      "cider": "Cider",
      "clay": "Molten Clay",
      "gold": "Molten Gold",
      "binnie.resin": "Resin",
      "binnie.liqueur.chocolate": "Chocolate Liqueur",
      "cloud_seed_concentrated": "Concentrated Cloud Seed",
      "binnie.liqueur.mint": "Mint Liqueur",
      "binnie.wine.apricot": "Apricot Wine",
      "binnie.liqueur.anise": "Anise Liqueur",
      "copper": "Molten Copper",
      "potion_lingering": "Lingering Potion",
      "ic2construction_foam": "Construction Foam",
      "electrum": "Molten Electrum",
      "biomass": "Biomass",
      "binnie.dna.raw": "Raw DNA",
      "poison": "Poison",
      "binnie.rum.white": "White Rum",
      "refinedcanolaoil": "Refined Canola Oil",
      "blood": "Blood",
      "alubrass": "Molten Aluminum Brass",
      "binnie.cider.peach": "Peach Cider",
      "mana": "Primal Mana",
      "fuel_gaseous_heat_2": "Gaseous Fuel (§cSearing§r)",
      "flux_goo": "Flux Goo",
      "fuel_gaseous_heat_1": "Gaseous Fuel (§6Hot§r)",
      "binnie.juice.banana": "Banana Juice",
      "binnie.wine.sparkling": "Sparkling Wine",
      "if.ore_fluid_fermented": "Fermented Ore Meat",
      "refined_biofuel": "Grassoline",
      "wildberrywine": "Wildberry Wine",
      "sewage": "Sewage",
      "ic2superheated_steam": "Superheated Steam",
      "xpjuice": "Liquid XP",
      "oil_residue_heat_2": "Residue (§cSearing§r)",
      "bio.ethanol": "Ethanol",
      "fierymetal": "Molten Fiery",
      "oil_residue_heat_1": "Residue (§6Hot§r)",
      "binnie.ciderpear": "Pear Cider",
      "binnie.liqueur.herbal": "Herbal Liqueur",
      "fire_water": "Fire Water",
      "knightslime": "Molten Knightslime",
      "ice": "Crushed Ice",
      "ic2biomass": "Biomass",
      "fuel_light": "Light Fuel (§bCool§r)",
      "latex": "Latex",
      "binnie.brandy.fruit": "Fruit Brandy",
      "pigiron": "Molten Pigiron",
      "tin": "Molten Tin",
      "empoweredoil": "Empowered Oil",
      "ardite": "Molten Ardite",
      "binnie.wine.tomato": "Tomato Wine",
      "binnie.wine.cherry": "Cherry Wine",
      "ic2oxygen": "Oxygen",
      "glass": "Liquid Glass",
      "obsidian": "Molten Obsidian",
      "fuel_mixed_light_heat_2": "Mixed Light Fuels (§cSearing§r)",
      "fuel_mixed_light_heat_1": "Mixed Light Fuels (§6Hot§r)",
      "oil_distilled_heat_1": "Distilled Oil (§6Hot§r)",
      "vapor_of_levity": "Vapor of Levity",
      "oil_distilled_heat_2": "Distilled Oil (§cSearing§r)",
      "ender_distillation": "Dew of the Void",
      "binnie.wine.carrot": "Carrot Wine",
      "binnie.spirit.gin": "Gin",
      "soularium": "Molten Soularium",
      "binnie.liquor.apricot": "Apricot Liquor",
      "sand": "Quicksand",
      "mushroom_stew": "Mushroom Stew",
      "binnie.brandy.cherry": "Cherry Brandy",
      "binnie.wine.citrus": "Citrus Wine",
      "binnie.juice.peach": "Peach Juice",
      "emerald": "Molten Emerald",
      "binnie.whiskey.corn": "Bourbon",
      "binnie.liqueur.banana": "Banana Liqueur",
      "binnie.wine.banana": "Banana Wine",
      "binnie.wine.pineapple": "Pineapple Wine",
      "binnie.beer.wheat": "Wheat Beer",
      "binnie.whiskey.rye": "Rye Whiskey",
      "binnie.juice.elderberry": "Elderberry Juice",
      "gasoline": "Gasoline",
      "iridium": "Molten Iridium",
      "lava": "Lava",
      "lumium": "Molten Lumium",
      "binnie.juice": "Fruit Wine",
      "honey": "Honey",
      "binnie.juice.apple": "Apple Juice",
      "xu_evil_metal": "Evil Infused Iron",
      "if.protein": "Protein",
      "ic2hot_coolant": "IC2 Hot Coolant",
      "binnie.wine.agave": "Agave Wine",
      "binnie.spirit.neutral": "Neutral Spirit",
      "binnie.liqueur.orange": "Orange Liqueur",
      "ic2heavy_water": "Heavy Water",
      "binnie.beer.lager": "Lager",
      "nickel": "Molten Nickel",
      "ic2pahoehoe_lava": "Pahoehoe Lava",
      "potion": "Potion",
      "knightmetal": "Molten Knightmetal",
      "binnie.beer.stout": "Stout",
      "binnie.juice.white.grape": "White Grape Juice",
      "plantoil": "Plant Oil",
      "syrup": "Syrup",
      "stone": "Seared Stone",
      "conductive_iron": "Molten Conductive Iron",
      "binnie.juice.lemon": "Lemon Juice",
      "purifying_fluid": "Purifying Fluid",
      "binnie.turpentine": "Turpentine",
      "iron": "Molten Iron",
      "alewort": "Ale Wort",
      "binnie.mash.grain": "Fermented Grain Mash",
      "petrotheum": "Tectonic Petrotheum",
      "potion_splash": "Splash Potion",
      "fuel_mixed_heavy": "Mixed Heavy Fuels (§bCool§r)",
      "binnie.liqueur.lemon": "Lemon Liqueur",
      "binnie.brandy.apple": "Apple Brandy",
      "redstone_alloy": "Molten Redstone Alloy",
      "ender": "Resonant Ender",
      "binnie.growth.medium": "Growth Medium",
      "cloud_seed": "Cloud Seed",
      "refined_fuel": "Refined Fuel",
      "glowstone": "Energized Glowstone",
      "for.honey": "Honey",
      "binnie.latex": "Latex",
      "tree_oil": "Tree Oil",
      "molten_reinforced_pink_slime": "Molten Reinforced Pink Slime",
      "zinc": "Molten Zinc",
      "biodiesel": "Biodiesel",
      "binnie.brandy.citrus": "Citrus Brandy",
      "oil_heat_1": "Crude Oil (§6Hot§r)",
      "binnie.spirit.sugarcane": "Cachaca",
      "liquiddna": "Liquid DNA",
      "binnie.liquor.pear": "Pear Liquor",
      "mutagen": "Mutagen",
      "biofuel": "Biofuel",
      "binnie.juice.tomato": "Tomato Juice",
      "binnie.wine.plum": "Plum Wine",
      "fuel_dense_heat_1": "Dense Fuel (§6Hot§r)",
      "binnie.liquor.cherry": "Cherry Liquor",
      "fuel_dense_heat_2": "Dense Fuel (§cSearing§r)",
      "binnie.whiskey.wheat": "Wheat Whiskey",
      "binnie.brandy.apricot": "Apricot Brandy",
      "end_steel": "Molten End Steel",
      "fuel_light_heat_1": "Light Fuel (§6Hot§r)",
      "fuel_light_heat_2": "Light Fuel (§cSearing§r)",
      "rocket_fuel": "Rocket Fuel",
      "silver": "Molten Silver",
      "vibrant_alloy": "Molten Vibrant Alloy",
      "ic2uu_matter": "UU-Matter",
      "oil_heat_2": "Crude Oil (§cSearing§r)",
      "if.pink_slime": "Pink Slime",
      "ironwine": "Iron Wine",
      "steel": "Molten Steel",
      "binnie.beer.rye": "Rye Beer",
      "xu_demonic_metal": "Molten Demon Metal",
      "diesel": "Diesel",
      "ic2weed_ex": "Weed-Ex",
      "hot_spring_water": "Hot Spring Water",
      "cobalt": "Molten Cobalt",
      "ic2air": "Air",
      "short.mead": "Short Mead",
      "binnie.wine.white": "White Wine",
      "ethanol": "Ethanol",
      "refined_oil": "Naphtha",
      "binnie.liqueur.hazelnut": "Hazelnut Liqueur",
      "binnie.liqueur.cinnamon": "Cinnamon Liqueur",
      "hootch": "Hootch",
      "binnie.juice.pear": "Pear Juice",
      "xu_enchanted_metal": "Enchanted Metal",
      "astralsorcery.liquidstarlight": "Liquid Starlight",
      "binnie.juice.pineapple": "Pineapple Juice",
      "pyrotheum": "Blazing Pyrotheum",
      "pulsating_iron": "Molten Pulsating Iron",
      "binnie.fermented.potatoes": "Fermented Potatoes",
      "binnie.juice.orange": "Orange Juice",
      "binnie.brandy.grape": "Brandy",
      "binnie.liqueur.cherry": "Cherry Liqueur",
      "biocrude": "Biocrude",
      "constantan": "Molten Constantan",
      "juice": "Fruit Juice",
      "lead": "Molten Lead",
      "binnie.vodka": "Vodka",
      "ic2hot_water": "Hotspring Water",
      "binnie.bacteria.poly": "Polymerising Bacteria",
      "binnie.juice.cranberry": "Cranberry Juice",
      "fuel_mixed_light": "Mixed Light Fuels (§bCool§r)",
      "soulshardsrespawn.corrupted": "Molten Corruption",
      "ic2biogas": "Biogas",
      "binnie.liquor.elderberry": "Elderberry Liquor",
      "grapejuice": "Grape Juice",
      "electrical_steel": "Molten Electrical Steel",
      "oil_dense": "Dense Oil (§bCool§r)",
      "fuel_mixed_heavy_heat_2": "Mixed Heavy Fuels (§cSearing§r)",
      "fuel_mixed_heavy_heat_1": "Mixed Heavy Fuels (§6Hot§r)",
      "mead": "Mead",
      "oliveoil": "Olive Oil",
      "applejuice": "Apple Juice",
      "experience": "Essence of Knowledge",
      "platinum": "Molten Platinum",
      "binnie.brandy.pear": "Pear Brandy",
      "binnie.wine.cranberry": "Cranberry Wine",
      "cyanite": "Fluid Cyanite",
      "ale": "Ale",
      "binnie.liqueur.blackcurrant": "Blackcurrant Liqueur",
      "binnie.liqueur.coffee": "Coffee Liqueur",
      "binnie.rum.dark": "Dark Rum",
      "binnie.sap": "Sap",
      "cryotheum": "Gelid Cryotheum",
      "dirt": "Liquid Dirt",
      "brass": "Molten Brass",
      "water": "Water",
      "binnie.beer.ale": "Ale",
      "binnie.mash.rye": "Fermented Rye Mash",
      "resin": "Resin",
      "binnie.liqueur.almond": "Almond Liqueur",
      "binnie.mash.wheat": "Fermented Wheat Mash",
      "ic2steam": "Steam",
      "coal": "Liquifacted Coal",
      "binnie.liquor.fruit": "Fruit Liquor",
      "uranium": "Molten Uranium",
      "binnie.liqueur.melon": "Melon Liqueur",
      "canolaoil": "Canola Oil",
      "concrete": "Liquid Concrete",
      "oil_dense_heat_2": "Dense Oil (§cSearing§r)",
      "binnie.mash.corn": "Fermented Corn Mash",
      "binnie.beer.corn": "Corn Beer",
      "binnie.wine.fortified": "Fortified Wine",
      "energetic_alloy": "Molten Energetic Alloy",
      "oil": "Crude Oil (§bCool§r)",
      "signalum": "Molten Signalum",
      "enderium": "Molten Enderium",
      "steam": "Steam",
      "oil_dense_heat_1": "Dense Oil (§6Hot§r)",
      "wildberryjuice": "Wildberry Juice",
      "if.ore_fluid_raw": "Raw Ore Meat",
      "ironberryjuice": "Ironberry Juice",
      "creosote": "Creosote Oil",
      "sap": "Sap",
      "sludge": "Sludge",
      "blueslime": "Liquid Blue Slime",
      "crystaloil": "Crystallized Oil",
      "nutrient_distillation": "Nutrient Distillation",
      "ic2coolant": "IC2 Coolant",
      "binnie.wine.elderberry": "Elderberry Wine",
      "meat": "Liquid Meat",
      "fuel_gaseous": "Gaseous Fuel (§bCool§r)",
      "binnie.liqueur.blackberry": "Blackberry Liqueur",
      "binnie.bacteria": "Bacteria",
      "lubricant": "Lubricant"
    }
  },
  "clientRendering": {
    "renderHUD_1P": {
      "value": true,
      "comment": "If false, the HUD in vehicles will not render in 1st-person mode."
    },
    "renderHUD_3P": {
      "value": true,
      "comment": "If false, the HUD in vehicles will not render in 3rd-person mode."
    },
    "fullHUD_1P": {
      "value": false,
      "comment": "If true, the full-size HUD will render in 1st-person rather than the half-size HUD."
    },
    "fullHUD_3P": {
      "value": false,
      "comment": "If true, the full-size HUD will render in 3rd-person rather than the half-size HUD."
    },
    "transpHUD_1P": {
      "value": false,
      "comment": "If true, the background textures for the HUD will not be rendered in 1st-person."
    },
    "transpHUD_3P": {
      "value": false,
      "comment": "If true, the background textures for the HUD will not be rendered in 1st-person."
    },
    "renderWindows": {
      "value": true,
      "comment": "Should the glass on windows be rendered on vehicles?"
    },
    "innerWindows": {
      "value": false,
      "comment": "Should the glass on windows be rendered on the inside of the vehicle?  Note: if renderWindows is false, this config has no effect."
    },
    "vehicleBeams": {
      "value": true,
      "comment": "If false, beams on vehicles will not render."
    },
    "blockBeams": {
      "value": true,
      "comment": "If false, beams on blocks will not render."
    },
    "brightLights": {
      "value": true,
      "comment": "If false, lights from vehicles and blocks will not do brightness blending and will render as if they were part of the model at that same brightness.  Useful if you have shaders and this is causing troubles."
    },
    "blendedLights": {
      "value": true,
      "comment": "If false, beam-based lights from vehicles and blocks will not do brightness blending.  This is different from the general brightness setting as this will do OpenGL blending on the world to make it brighter, not just the beams themselves."
    },
    "playerTweaks": {
      "value": true,
      "comment": "If true, player hands will be modified when holding guns, and hands and legs will be modified when riding in vehicles.  Set this to false if mods cause issues, like two-hand rendering or player model issues."
    }
  },
  "clientControls": {
    "mouseYoke": {
      "value": false,
      "comment": "Enable mouse yoke for vehicles? Prevents looking around unless unlocked.  Think MCHeli controls."
    },
    "kbOverride": {
      "value": true,
      "comment": "Should keyboard controls be ignored when a joystick control is mapped?  Leave true to free up the keyboard while using a joysick."
    },
    "simpleThrottle": {
      "value": true,
      "comment": "If true, then vehicles will automatically go into reverse after stopped with the brake rather than staying stopped and waiting for you to shift.  When going in reverse, the opposite is true: the vehicle will shift into forwards when pressing forwards when stopped.  Additionally, the parking brake will automatically be set when leaving the vehicle."
    },
    "halfThrottle": {
      "value": false,
      "comment": "If true, then the gas key will only be a half-throttle, with the MOD+Throttle key becoming the full-speed control.  Useful if you want a more controlled vehicle experience.  Only valid on car/boat types with on-off throttles, and does not work in conjunction with simpleThrottle as that changes how the MOD key works with gas and brake keys."
    },
    "autostartEng": {
      "value": true,
      "comment": "If true, engines will automatically start when a driver enters a vehicle, and will turn off when they leave.  The parking brake will also be applied when leaving the vehicle.  Note: this does not bypass the fuel or electrical system."
    },
    "autoTrnSignals": {
      "value": true,
      "comment": "If true, turns signals will come on automatically when you start a turn, and will turn off when the turn completes.  If this is false, then they will only be able to be activated with the keybinds or via the panel."
    },
    "north360": {
      "value": false,
      "comment": "If true, instruments will represent North as 360 degrees, instead of the Minecraft default of 180. Allows using the heading system that real-world pilots and militaries do."
    },
    "devMode": {
      "value": false,
      "comment": "If enabled, MTS will allow access to the dev mode GUI while sitting in vehicles.  The GUI allows editing JSONs in-game without the need to restart."
    },
    "controlSurfaceCooldown": {
      "value": 4,
      "comment": "How long (in ticks) it takes before control surfaces try to return to their natural angle.  This is not used when using a joystick."
    },
    "steeringIncrement": {
      "value": 20,
      "comment": "How many units (1/10 of a degree) to turn the wheels on vehicles for every tick the button is held down.  This is not used when using a joystick."
    },
    "flightIncrement": {
      "value": 6,
      "comment": "How many units (1/10 of a degree) to move the elevators and ailerons on aircraft for every tick the button is held down.  This is not used when using a joystick."
    },
    "joystickDeadZone": {
      "value": 0.03,
      "comment": "Dead zone for joystick axis.  This is NOT joystick specific."
    }
  },
  "controls": {
    "keyboard": {
      "aircraft.mod": {
        "keyCode": 54
      },
      "aircraft.camlock": {
        "keyCode": 157
      },
      "aircraft.yaw_r": {
        "keyCode": 38
      },
      "aircraft.yaw_l": {
        "keyCode": 36
      },
      "aircraft.pitch_u": {
        "keyCode": 31
      },
      "aircraft.pitch_d": {
        "keyCode": 17
      },
      "aircraft.roll_r": {
        "keyCode": 32
      },
      "aircraft.roll_l": {
        "keyCode": 30
      },
      "aircraft.throttle_u": {
        "keyCode": 23
      },
      "aircraft.throttle_d": {
        "keyCode": 37
      },
      "aircraft.flaps_u": {
        "keyCode": 21
      },
      "aircraft.flaps_d": {
        "keyCode": 35
      },
      "aircraft.brake": {
        "keyCode": 48
      },
      "aircraft.panel": {
        "keyCode": 22
      },
      "aircraft.radio": {
        "keyCode": 12
      },
      "aircraft.gun_fire": {
        "keyCode": 57
      },
      "aircraft.gun_switch": {
        "keyCode": 47
      },
      "aircraft.zoom_i": {
        "keyCode": 201
      },
      "aircraft.zoom_o": {
        "keyCode": 209
      },
      "aircraft.js_inhibit": {
        "keyCode": 70
      },
      "car.mod": {
        "keyCode": 54
      },
      "car.camlock": {
        "keyCode": 157
      },
      "car.turn_r": {
        "keyCode": 32
      },
      "car.turn_l": {
        "keyCode": 30
      },
      "car.gas": {
        "keyCode": 17
      },
      "car.brake": {
        "keyCode": 31
      },
      "car.panel": {
        "keyCode": 22
      },
      "car.shift_u": {
        "keyCode": 19
      },
      "car.shift_d": {
        "keyCode": 33
      },
      "car.horn": {
        "keyCode": 46
      },
      "car.radio": {
        "keyCode": 12
      },
      "car.gun_fire": {
        "keyCode": 57
      },
      "car.gun_switch": {
        "keyCode": 47
      },
      "car.zoom_i": {
        "keyCode": 201
      },
      "car.zoom_o": {
        "keyCode": 209
      },
      "car.lights": {
        "keyCode": 76
      },
      "car.turnsignal_l": {
        "keyCode": 75
      },
      "car.turnsignal_r": {
        "keyCode": 77
      },
      "car.js_inhibit": {
        "keyCode": 70
      }
    },
    "joystick": {
      "aircraft.mod": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.camlock": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.yaw": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.pitch": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.roll": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.throttle": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.brake": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.brake_digital": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.flaps_u": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.flaps_d": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.panel": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.park": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.radio": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.gun_fire": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.gun_switch": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.zoom_i": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.zoom_o": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.changeview": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.look_l": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.look_r": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.look_u": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.look_d": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.look_a": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.trim_yaw_r": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.trim_yaw_l": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.trim_pitch_u": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.trim_pitch_d": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.trim_roll_r": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.trim_roll_l": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.reverse": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "aircraft.js_inhibit": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.mod": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.camlock": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.turn": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.gas": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.brake": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.brake_digital": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.panel": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.shift_u": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.shift_d": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.horn": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.park": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.radio": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.gun_fire": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.gun_switch": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.zoom_i": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.zoom_o": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.changeview": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.look_l": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.look_r": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.look_u": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.look_d": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.look_a": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.lights": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.turnsignal_l": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.turnsignal_r": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      },
      "car.js_inhibit": {
        "buttonIndex": 0,
        "invertedAxis": false,
        "axisMinTravel": 0.0,
        "axisMaxTravel": 0.0
      }
    }
  }
}